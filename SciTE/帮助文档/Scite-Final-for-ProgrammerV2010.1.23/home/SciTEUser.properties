# user specific configuration, just copy this file to c:\Document and Setting\%username%\SciTeUser.properties

#debug.target=[n]:pdbg;python;testadd.py

#窗口外观设置


#运行时窗口在桌面的坐标，最大化时不起作用
if PLAT_WIN
position.left=0
position.top=0
if PLAT_GTK
position.left=5
position.top=22
#窗口初始宽度、高度，-1表示最大化
position.width=-1
position.height=-1
# 当打开两个scite时,设成1,并position.left=0,position.width=屏幕宽度一半, 这时两个scite实例就可以并列显示了.这在特殊情况下可能有用
#position.tile=1
#全屏时隐藏菜单栏，1=true，0=false 只有在全局配置里更改才有效。
full.screen.hides.menu=1
#最小化到托盘区，1=true，0=false
#minimize.to.tray=1
#窗口垂直分割，和输出窗口的分割
split.vertical=0
#水平、垂直模式输出窗口大小
#output.horizontal.size=200
#output.vertical.size=60
#输出窗口默认隐藏
#output.initial.hide=1
#水平滚动条不可见
#horizontal.scrollbar=0
#水平滚动条最大滚动范围
#horizontal.scroll.width=10000
#垂直滚动条不可见
#output.horizontal.scrollbar=0
#垂直滚动条最大滚动范围
#output.horizontal.scroll.width=10000
#滚动条不可见
#output.scroll=0
#编译错误定位到源代码
#error.select.line=1
#文件尾留空，默认设置中，光标在文件最后一行时垂直滑动条无法再向下滚动，不符合使用习惯。
end.at.last.line=0
#多文档标签栏可见
tabbar.visible=1
#只有一个文档是隐藏标签栏
#tabbar.hide.one=1
#多行显示标签栏
#tabbar.multiline=1
#工具栏可见
toolbar.visible=1
#可分割工具栏
#toolbar.detachable=1
#显示用户定制工具栏
toolbar.usestockicons=1
#可分割菜单栏
#menubar.detachable=1
#撤销，重做选项 Setting this to 1 changes the technique used to determine when to enable or disable tool bar buttons to be less accurate. This may improve performance on slow machines.
#undo.redo.lazy=1
#状态栏可见
statusbar.visible=1
#打开文件对话框大小
#fileselector.width=800
#fileselector.height=600
#字体放大倍数
#magnification=-1
#output.magnification=-1

# 编辑区外观设置

#初始化时编辑区左边显示行号列可见。
line.margin.visible=1
# 行号列的宽度，也就是预留几位数的行号，如果你希望位数不足时能自动扩展，可以在数字后跟个+号，比如line.3+
line.margin.width=3+
#行号缩进的宽度
margin.width=16
#代码折叠区的宽度
fold.margin.width=16
#折叠区颜色
#fold.margin.colour=#FF0000
#折叠符号颜色
#fold.margin.highlight.colour=#0000FF
#编辑区左右空白宽度
#blank.margin.left=4
#blank.margin.right=4
#缓存载入和高亮，建议打开，可以提高速度，但是内存会占用多一点，这应该不是什么问题
buffered.draw=1
#不启用两阶段绘制文字，速度更快. 改成1，显示效果更好，但会略慢一些。
#two.phase.draw=0
#This properties are only available on GTK+.
use.palette=0

# Element styles

#载入时定位到文档尾
#view.eol=1
# 指定控制字符显示
#control.char.symbol=.
#光标闪烁频率，单位毫秒
caret.period=500
#显示空白符号
view.whitespace=0
#以空格和退格表示缩进
view.indentation.whitespace=1
#显示缩进线，写代码会很有用
view.indentation.guides=1
#高亮时同时高亮缩进线
highlight.indentation.guides=1
#光标颜色、宽度
#caret.fore=#FF0000
#caret.width=2
#当前行背景色、背景透明度
#caret.line.back=#FFFED8
#caret.line.back.alpha=63 
#列模式下列数
edge.column=200
#列模式开关
edge.mode=1
#列模式颜色
edge.colour=#C0DCC0
# 启用括号匹配检查
braces.check=1
braces.sloppy=1
# 选中文本的颜色，透明度和背景色 E0E0E8
selection.fore=#FF0000
selection.alpha=100
selection.back=#003300
#空格颜色，背景色
#whitespace.fore=#FF0000
#whitespace.back=#FFF0F0
#错误处的颜色，背景色
#error.marker.fore=#0000A0
#error.marker.back=#DADAFF
#书签颜色，背景色、背景色透明度
#bookmark.fore=#808000
#bookmark.back=#FFFFA0
bookmark.alpha=70
#查找时，找到文本的颜色
find.mark=#003300

# Checking

#关闭时提示保存
are.you.sure=1
#编译和运行时提示保存,0为编译时自动保存文件,不提示. 设成1则提示保存
are.you.sure.for.build=1
#编译时自动保存所有,1为编译时自动保存所有文件
save.all.for.build=0
#关闭最后一个文档是退出程序
#quit.on.close.last=1
# 当前文件被外部修改时自动重新载入
load.on.activate=1
# scite失去焦点时自动保存文档。在某些时候这个选项很有用，比如切换到另外的程序去查看文档编辑效果。
#save.on.deactivate=1
# 当load.on.activate=1时，且本条设1，重新载入时会先询问你
are.you.sure.on.reload=1
# 重新载入文档时保留还原信息
reload.preserves.undo=1
# 在已运行的Scite中打开新文件
check.if.already.open=1
# 新建文件时的默认语言模块
default.file.ext=.py
#GTK+ only
#source.default.extensions=.h|.cxx|.bat
#窗口标题显示文档的完整路径
title.full.path=1
# 显示当前buffer序号
#title.show.buffers=1
# 保存最近打开文件，下次启动SciTE时会自动重新载入。
#save.recent=1
#save.session=1
#设置“打开文件”命令的初始目录为当前文件目录。这个功能非常实用，否则有时文件目录很深，要打开一个文件，一级级点击进去真是麻烦。
#open.dialog.in.file.directory=1
# 保存文件时去除尾随空格
#strip.trailing.spaces=1
# 保存时确保文件以行结束,这在处理文档时有时要用到
#ensure.final.line.end=1
# 保存文件时确保所有行结束符一致
#ensure.consistent.line.ends=1
# 保存文件前先删除原文件
#save.deletes.first=1
# 设置可以同时打开文件的数目
buffers=20
# 当打开多个页面时,设成1,按Ctrl+tab 切换到先前打开页面; 设0时则按排列顺序切换.
#buffers.zorder.switching=1
# 载入特定语言的api文档，多个文档用;分隔。api中包含标识符，函数参数等。api文档用来自动提示和自动完成
# 举例如：au3.properties中是这样引用api文档的：api.$(file.patterns.au3)=$ (SciteDefaultHome)\api\au3.api;$(SciteDefaultHome)\api\au3.user.calltips.api
#api.*.cxx=d:\api\w.api
# api文件的格式，如果你安装的是Scite4AutoIt的版本，那么你只要打开SciTE目录下的api目录，就能看到AutoIt所用的api文档，看看就知道了
#api.filepattern

#win95.death.delay=1000
# 当使用汉化版时，当没有找到对应的翻译，用***来代替。这个功能对汉化版的作者非常有用。
#translation.missing=***
# 0为取消“打开的文档只读”。如果设成1，打开文档只读，但新建文档不受影响。
#read.only=1
# 用Scite文本编辑器打开最大不超过多少byte的文件。0表示不限制。如果设置一个值，打开文件进超过限制，就会先提示你，接受就打开，不接受相当于什么也没有发生
#max.file.size=1

# 缩进，自动换行，代码折叠

#缩进
# 一个tab占几个空格，一般设成4。
tabsize=4
# 一个自动缩进占几个空格，一般为4
indent.size=4
#使用tab键
use.tabs=1
#自动缩进，就是自动保持前一行的缩进
#indent.auto=1
#智能缩进，和上面的区别就是有反缩进
indent.automatic=1
#代码缩进，比如大括号回车自动缩进
indent.opening=0
#代码反缩进，同上
indent.closing=0
#tab键缩进
#tab.indents=0
#退格键反缩进
#backspace.unindents=0

# 自动换行
#自动换行开关
wrap=0
#换行的风格
#wrap.style=2
#cache.layout=3
#输出窗口自动换行
#output.wrap=1
#output.cache.layout=3
#自动换行处的标记符
#wrap.visual.flags=3
#wrap.visual.flags.location=3
#wrap.visual.startindent=4

# 代码折叠
# 代码折叠开关
fold=1
#折叠指示，建议打开
fold.compact=1
#折叠指示区宽度
fold.flags=16
# 折叠符号,0为三角形，1为展开-收缩+, 2为圆形，3方形。一般选2
fold.symbols=2
#打开文档后默认全部折叠
#fold.on.open=1
#代码注释折叠
fold.comment=1
#折叠预处理，设成1，伸展时折叠符号区有一条短线指示折叠位置。收缩时显示一条长线。
fold.preprocessor=1
# xml和html文件折叠
#fold.html=0

# 状态栏
# 状态栏循环周期及具体显示哪些信息。
statusbar.number=4
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) - $(FileTime) | $(FileAttr)


# 字符集
# Japanese input code page 932 and ShiftJIS character set 128
#code.page=932
#character.set=128
# Unicode
#code.page=65001
#character.set=204
# Required for Unicode to work on GTK+:
#LC_CTYPE=en_US.UTF-8
#output.code.page=65001
# 字体,GB2312=134 or BIG5=136
#character.set=134
#UTF-8 如果操作系统不是UTF-8, 那么修改输出设置output.code.page, UTF-8=65001, GBK=936, BIG5=950
### 编辑区代码页：
#code.page=936
#code.page=950
code.page=936
#LC_CTYPE=en_US.UTF-8
### 调试区代码页：
#output.code.page=936
#output.code.page=950
#output.code.page=65001
#output.code.page=936

# 样式设置.使用*设置的全局样式能被所有语言继续(除非被特定语言的样式设置覆盖)，请参看全局配置中的示例
# 全局默认样式
#style.*.32=$(font.base)
# 行号背景，前景，字体,你可以在用户配置文件里改动一下试试，立即能看到效果
#style.*.33=back:#C0C0C0,$(font.base)
# 括号(', ')', '[', ']', '{', 和 '}高亮颜色
#style.*.34=fore:#0000FF,bold
# 不匹配括号高亮颜色.这在写代码多层括号嵌套时很有用
#style.*.35=fore:#FF0000,bold
# 控制字符
#style.*.36=
# 缩进线
#style.*.37=fore:#C0C0C0,back:#FFFFFF 