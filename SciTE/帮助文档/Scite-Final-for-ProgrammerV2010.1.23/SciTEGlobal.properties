# Global initialisation file for SciTE
# For Linux, place in $prefix/share/scite
# For Windows, place in same directory as SciTE.EXE (or Sc1.EXE)
# Documentation at http://www.scintilla.org/SciTEDoc.html

scite.userhome=$(SciteDefaultHome)\home

# skip files to step into when debugging:
debug.skip.file.matching=E:/download/Mingw/Mingw
debug.skip.file.matching.py=c:\python26

## to invoke on save SciTE (save_settings.lua)
save.settings=1
#import home\SciTE.session

#config sidebar for filebrowser/func-proc/abbreviations:

    # Set show(1) or hide(0) to SciTE start
  sidebar.show=1
    # Set default settings for Functions/Procedures List
   # sidebar.functions.flags=1
   # sidebar.functions.params=1
	
command.checked.38.*=$(sidebar.show)
command.name.38.*=SideBar
command.38.*=SideBar_ShowHide
command.mode.38.*=subsystem:lua,savebefore:no
CN_SIDEBAR=38
command.shortcut.38.*=Ctrl+F1

extension.*=SideBar

ext.lua.startup.script=$(SciteDefaultHome)\scite-debug\extman.lua

ext.lua.auto.reload=1
ext.lua.reset=0


[Tools Menu]      User defined "Tools"

# ----------------------------------------------
command.submenu.name.4.*=Special Paste

  command.parent.40.*=4
  command.name.40.*=Insert marked (on Ctrl+F2) lines
  command.40.*=dostring action="Ins" dofile(props["SciteDefaultHome"].."\\tools\\CopyMarkedLines.lua")
  command.mode.40.*=subsystem:lua,savebefore:no
  #~ command.shortcut.40.*=Ctrl+Shift+B

  command.parent.41.*=4
  command.name.41.*=Insert DATE TIME
  command.41.*=dostring editor:AddText(os.date("%d.%m.%Y %H:%M ")) 
  command.mode.41.*=subsystem:lua,savebefore:no

  command.parent.42.*=4
  command.name.42.*=Insert Filename
  command.42.*=dostring editor:AddText(props["FileNameExt"])
  command.mode.42.*=subsystem:lua,savebefore:no

  command.parent.43.*=4
  command.name.43.*=Insert Special Char (? ? ? ??
   # used \tools\InsertSpecialChar.lua
  command.43.*=SpecialChar
  command.mode.43.*=subsystem:lua,savebefore:no
  #~ command.shortcut.43.*=Alt+'

# ----------------------------------------------
command.submenu.name.5.*=From Selection

  command.parent.50.*=5
  command.name.50.*=Calculation/Open URL
  command.50.*=dofile $(SciteDefaultHome)\tools\exec.lua
  command.mode.50.*=subsystem:lua,savebefore:no

  command.parent.51.*=5
  command.name.51.*=ASCII code of selected text
  command.51.*=dofile $(SciteDefaultHome)\tools\ascii.lua
  command.mode.51.*=subsystem:lua,savebefore:no

  command.parent.52.*=5
  command.name.52.*=Registry Jump
  command.52.*=wscript "$(SciteDefaultHome)\tools\RegJump.js"
  command.input.52.*=$(CurrentSelection)
  command.mode.52.*=subsystem:windows,replaceselection:no,savebefore:no,quiet:yes
  command.shortcut.52.*=Ctrl+Alt+J
  #~ ≈щ?один вариан?
  #~ command.52.*=CMD /C REG QUERY "$(CurrentSelection)" /s | "$(SciteDefaultHome)\tools\xcode\xcode.exe" -p -s -E +w -a
  #~ command.mode.52.*=subsystem:console

  command.separator.53.*=1
  command.parent.53.*=5
  command.name.53.*=Add to Abbreviation
  command.53.*=dofile $(SciteDefaultHome)\tools\MakeAbbrev.lua
  command.mode.53.*=subsystem:lua,savebefore:no

  command.parent.54.*=5
  command.name.54.*=Text -> In a new file
  command.54.*=dostring props['clear.before.execute']=0 local text=props['CurrentSelection'] if editor.Focus then text=editor:GetSelText() end if string.len(text)==0 then text=output:GetText() end scite.Open("") editor:AddText(text)
  command.mode.54.*=subsystem:lua,savebefore:no
  CN_TEXT_IN_NEW_FILE=054

  command.separator.55.*=1
  command.parent.55.*=5
  command.name.55.*=Spelling
  command.55.*=wscript "$(SciteDefaultHome)\tools\SpellCheck.vbs"
  command.input.55.*=$(CurrentSelection)
  command.mode.55.*=subsystem:windows,replaceselection:auto,savebefore:no,quiet:yes
  CN_SPELLING=055

# ----------------------------------------------
command.submenu.name.6.*=Copy To Clipboard

  command.parent.60.*=6
  command.name.60.*=All Text
  command.60.*=dostring editor:CopyText(editor:GetText())
  command.mode.60.*=subsystem:lua,savebefore:no
  CN_COPY_TO_CLIPBOARD_ALL=060

  command.parent.61.*=6
  command.name.61.*=Path/Filename
  command.61.*=dostring editor:CopyText(props['FilePath'])
  command.mode.61.*=subsystem:lua,savebefore:no
  CN_COPY_TO_CLIPBOARD_FULLNAME=061

  command.parent.62.*=6
  command.name.62.*=Path
  command.62.*=dostring editor:CopyText(props['FileDir'])
  command.mode.62.*=subsystem:lua,savebefore:no
  CN_COPY_TO_CLIPBOARD_PATH=062

  command.parent.63.*=6
  command.name.63.*=Filename
  command.63.*=dostring editor:CopyText(props['FileNameExt'])
  command.mode.63.*=subsystem:lua,savebefore:no
  CN_COPY_TO_CLIPBOARD_FILENAME=063

  command.parent.64.*=6
  command.name.64.*=Marked (on Ctrl+F2) lines
  command.64.*=dofile $(SciteDefaultHome)\tools\CopyMarkedLines.lua
  command.mode.64.*=subsystem:lua,savebefore:no

command.submenu.name.8.*=Find String/Word

    command.parent.80.*=8
    command.name.80.*=Find
    command.80.*=dofile $(SciteDefaultHome)\tools\FindText.lua
    command.mode.80.*=subsystem:lua,savebefore:no
    command.shortcut.80.*=Ctrl+Alt+F
    CN_FIND_STRING_WORD=080

    command.parent.81.*=8
    command.name.81.*=Clear All Marks
    command.81.*=dostring EditorClearMarks() scite.SendEditor(SCI_SETINDICATORCURRENT, ifnil(tonumber(props['findtext.first.mark']),31)) if props['findtext.bookmarks'] == '1' then editor:MarkerDeleteAll(1) end
    command.mode.81.*=subsystem:lua,savebefore:no
    command.shortcut.81.*=Ctrl+Alt+C

    command.separator.82.*=1
    command.parent.82.*=8
    command.checked.82.*=$(findtext.matchcase)
    command.name.82.*=Find matchcase
    command.82.*=CheckChange findtext.matchcase
    command.mode.82.*=subsystem:lua,savebefore:no

    command.parent.83.*=8
    command.checked.83.*=$(findtext.bookmarks)
    command.name.83.*=Set Bookmarks
    command.83.*=CheckChange findtext.bookmarks
    command.mode.83.*=subsystem:lua,savebefore:no

    command.parent.84.*=8
    command.checked.84.*=$(findtext.output)
    command.name.84.*=Output Result
    command.84.*=CheckChange findtext.output
    command.mode.84.*=subsystem:lua,savebefore:no

    command.parent.85.*=8
    command.checked.85.*=$(findtext.tutorial)
    command.name.85.*=Output Tutorial
    command.85.*=CheckChange findtext.tutorial
    command.mode.85.*=subsystem:lua,savebefore:no

# ----------------------------------------------
command.submenu.name.9.*=Choice Color

  command.parent.90.*=9
  command.name.90.*=from System Dialog
  command.90.*=dofile $(SciteDefaultHome)\tools\ColorSet.lua
  command.mode.90.*=subsystem:lua,savebefore:no
  #~ command.shortcut.90.*=Alt+Shift+C
  CN_CHOICE_COLOR_FROM_SYSTEM_DIALOG=090

  command.parent.91.*=9
  command.name.91.*=from a Palette
  command.91.*="$(SciteDefaultHome)\tools\palette.hta" $(CurrentSelection)
  command.mode.91.*=subsystem:shellexec,replaceselection:auto,savebefore:no,quiet:yes
  CN_CHOICE_COLOR_FROM_A_PALETTE=091

# ----------------------------------------------
command.submenu.name.11.*=Util

  # command.parent.111.*=11
  # command.name.111.*=Color Image Viewer
  # command.111.*="$(SciteDefaultHome)\tools\CIViewer\CIViewer.hta"
  # command.mode.111.*=subsystem:shellexec,savebefore:no

  # command.parent.112.*=11
  # command.name.112.*=Code Poster to forum
  # command.112.*=dofile $(SciteDefaultHome)\tools\code-poster2.lua
  # command.mode.112.*=subsystem:lua,savebefore:no

  # command.separator.114.*=1
  # command.parent.114.*=11
   # used \tools\Calculator\SciTECalculatorPD.lua
  # command.name.114.*=Calculator
  # command.114.*=Calculator
  # command.mode.114.*=subsystem:lua,savebefore:no

  command.parent.115.*=11
   # used \tools\HexEdit\SciTEHexEdit.lua
  command.name.115.*=HEX Editor
  command.115.*=HexEditor
  command.mode.115.*=subsystem:lua,savebefore:no

  command.parent.116.*=11
  command.name.116.*=ASCII Table
  command.116.*=dofile $(SciteDefaultHome)\tools\ASCIITable.lua
  command.mode.116.*=subsystem:lua,savebefore:no

  command.separator.117.*=1
  command.parent.117.*=11
  command.name.117.*=Reload Startup Script
  command.117.*=dostring scite.ReloadStartupScript()
  command.mode.117.*=subsystem:lua,replaceselection:no,savebefore:no,quiet:yes
  command.shortcut.117.*=Alt+Ctrl+Shift+R

# Window sizes and visibility
if PLAT_WIN
	position.left=0
	position.top=0
if PLAT_GTK
	position.left=5
	position.top=22
position.width=-1
position.height=-1
#position.tile=1
#full.screen.hides.menu=1
minimize.to.tray=1
split.vertical=0
#output.horizontal.size=200
#output.vertical.size=60
#output.initial.hide=1
#horizontal.scrollbar=0
#horizontal.scroll.width=10000
#output.horizontal.scrollbar=0
#output.horizontal.scroll.width=10000
#output.scroll=0
#error.select.line=1
#end.at.last.line=0
tabbar.visible=1
#tabbar.hide.one=1
#tabbar.multiline=1
#toolbar.visible=1
#toolbar.detachable=1
#toolbar.usestockicons=1
#menubar.detachable=1
#undo.redo.lazy=1
statusbar.visible=1
#fileselector.width=800
#fileselector.height=600
#magnification=-1
#output.magnification=-1

# Sizes and visibility in edit pane
#line.margin.visible=1
line.margin.width=4
margin.width=16
#fold.margin.width=16
#fold.margin.colour=#FF0000
#fold.margin.highlight.colour=#0000FF
#blank.margin.left=4
#blank.margin.right=4
buffered.draw=1
#two.phase.draw=0
use.palette=0

# Element styles
#view.eol=1
#control.char.symbol=.
caret.period=500
view.whitespace=0
view.indentation.whitespace=1
view.indentation.guides=1
highlight.indentation.guides=1
#caret.fore=#FF0000
#caret.width=2
#caret.line.back=#FFFED8
#caret.line.back.alpha=63
edge.column=200
edge.mode=0
edge.colour=#C0DCC0
braces.check=1
braces.sloppy=1
#selection.fore=#006000
# DADADA used as background because it yields standard silver C0C0C0
# on low colour displays and a reasonable light grey on higher bit depths
selection.alpha=30
selection.back=#000000
#whitespace.fore=#FF0000
#whitespace.back=#FFF0F0
#error.marker.fore=#0000A0
#error.marker.back=#DADAFF
#bookmark.fore=#808000
#bookmark.back=#FFFFA0
#bookmark.alpha=
#find.mark=#0000FF

# Checking
are.you.sure=1
#are.you.sure.for.build=1
#save.all.for.build=1
#quit.on.close.last=1
#load.on.activate=1
#save.on.deactivate=1
#are.you.sure.on.reload=1
#reload.preserves.undo=1
#check.if.already.open=1
default.file.ext=.cxx
#source.default.extensions=.h|.cxx|.bat
#title.full.path=1
#title.show.buffers=1
save.recent=1
save.session=1
session.bookmarks=1
session.folds=1
open.dialog.in.file.directory=1
#strip.trailing.spaces=1
#ensure.final.line.end=1
#ensure.consistent.line.ends=1
#save.deletes.first=1
buffers=30
buffers.zorder.switching=1
#api.*.cxx=d:\api\w.api
api.*.c=$(SciteDefaultHome)/api/c.api
api.*.cpp=$(SciteDefaultHome)/api/cpp.api
api.*.py=$(SciteDefaultHome)/api/python.api
api.*.pl=$(SciteDefaultHome)/api/perl.api
#win95.death.delay=1000
#translation.missing=***
#read.only=1
#max.file.size=1

# Indentation
tabsize=4
indent.size=4
use.tabs=0
indent.auto=1
indent.automatic=1
indent.opening=0
indent.closing=0
#tab.indents=0
#backspace.unindents=0

# Wrapping of long lines
#wrap=1
#wrap.style=2
#cache.layout=3
#output.wrap=1
#output.cache.layout=3
#wrap.visual.flags=3
#wrap.visual.flags.location=3
#wrap.visual.startindent=4

# Folding
# enable folding, and show lines below when collapsed.
fold=1
fold.compact=1
fold.flags=16
fold.symbols=1
#fold.on.open=1
fold.comment=1
fold.preprocessor=1

# Find and Replace
# Internal search always available with recursive capability so use in preference to external tool
find.command=
# findstr is available on recent versions of Windows including 2000
#if PLAT_WIN
#	find.command=findstr /n /s $(find.what) $(find.files)
#find.input=$(find.what)
#if PLAT_GTK
#	find.command=grep --line-number "$(find.what)" $(find.files)
find.files=*.c *.cxx *.h
#find.in.files.close.on.find=0
#find.in.dot=1
#find.in.binary=1
#find.replace.matchcase=1
#find.replace.escapes=1
#find.replace.regexp=1
#find.replace.regexp.posix=1
#find.replace.wrap=0
#find.replacewith.focus=0
#find.replace.advanced=1

# Behaviour
#eol.mode=LF
eol.auto=1
clear.before.execute=0
#vc.home.key=1
#wrap.aware.home.end.keys=1
#autocompleteword.automatic=1
#autocomplete.choose.single=1
autocompleteword.automatic=0
autocompleteword.incremental=1
autocomplete.*.ignorecase=1
calltip.*.ignorecase=1
abbrev.always.update=1
abbrev.maximum.length=50

caret.policy.xslop=1
caret.policy.width=20
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=0
#visible.policy.strict=1
#visible.policy.slop=1
#visible.policy.lines=4
#time.commands=1
#caret.sticky=1
#properties.directory.enable=1

# Status Bar
statusbar.number=4
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr) $(status.msg)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) - $(FileTime) | $(FileAttr)

if PLAT_WIN
	command.scite.help="file://$(SciteDefaultHome)\doc\SciTEDoc.html"
	command.scite.help.subsystem=2
if PLAT_GTK
	command.print.*=a2ps "$(FileNameExt)"
	command.scite.help=firefox "file://$(SciteDefaultHome)/doc/SciTEDoc.html"

# Internationalisation
# Japanese input code page 932 and ShiftJIS character set 128
#code.page=932
#character.set=128
# Unicode
#code.page=65001
code.page=0
#character.set=204
# Required for Unicode to work on GTK+:
#LC_CTYPE=en_US.UTF-8
#output.code.page=65001

# Export
#export.keep.ext=1
export.html.wysiwyg=1
#export.html.tabs=1
#export.html.folding=1
export.html.styleused=1
#export.html.title.fullpath=1
#export.rtf.tabs=1
#export.rtf.font.face=Arial
#export.rtf.font.size=9
#export.rtf.tabsize=8
# Magnification (added to default screen font size)
export.pdf.magnification=0
# Font: Courier, Helvetica or Times (Courier line-wraps)
export.pdf.font=Helvetica
# Page size (in points): width, height
# E.g. Letter 612,792; A4 595,842; maximum 14400,14400
export.pdf.pagesize=595,842
# Margins (in points): left, right, top, bottom
export.pdf.margins=72,72,72,72
export.xml.collapse.spaces=1
export.xml.collapse.lines=1

# Define values for use in the imported properties files
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=КЪМЬЯ€јаЅб¬в√гƒд≈е∆ж«з»и…й кЋлћмЌнќоѕп–р—с“т”у‘ф’х÷ЎшўщЏъџы№ьЁэёюяц
# This is a better set for Russian:
#chars.accented=јаЅб¬в√гƒд≈е®Є∆ж«з»и…й кЋлћмЌнќоѕп–р—с“т”у‘ф’х÷ц„чЎшўщЏъџы№ьЁэёюя€

# The open.filter setting is only used on Windows where the file selector has a menu of filters to apply
# to the types of files seen when opening.
# There is a limit (possibly 256 characters) to the length of a filter,
# so not all source extensions can be in this setting.
source.files=*.asm;*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\
*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
*.java;*.js;*.py;*.pl;*.pm;*.rb;*.cgi;*.lua;*.conf;\
make*;*.mak;\
*.properties;*.html;*.xml;*.iface;*.bat;*.e

if PLAT_WIN
	all.files=All Files (*.*)|*.*|
if PLAT_GTK
	all.files=All Files (*)|*|Hidden Files (.*)|.*|
open.filter=\
All Source|$(source.files)|\
$(all.files)\
$(filter.ada)\
$(filter.conf)\
$(filter.asm)\
$(filter.asn1)\
$(filter.ave)\
$(filter.baan)\
$(filter.bash)\
$(filter.caml)\
$(filter.cmake)\
$(filter.cpp)\
#$(filter.ch)\
$(filter.css)\
$(filter.d)\
$(filter.eiffel)\
$(filter.erlang)\
$(filter.fortran)\
$(filter.gap)\
$(filter.idl)\
$(filter.inno)\
$(filter.java)\
$(filter.js)\
$(filter.kix)\
$(filter.lout)\
$(filter.lua)\
$(filter.matlab)\
$(filter.metapost)\
$(filter.mmixal)\
$(filter.nncrontab)\
$(filter.nsis)\
$(filter.opal)\
$(filter.pascal)\
$(filter.perl)\
$(filter.php)\
$(filter.pov)\
$(filter.prg)\
$(filter.properties)\
$(filter.ps)\
$(filter.python)\
$(filter.ruby)\
$(filter.sql)\
$(filter.specman)\
$(filter.tcl)\
$(filter.tex)\
$(filter.text)\
$(filter.vb)\
$(filter.web)\
$(filter.yaml)\
$(filter.verilog)\
$(filter.vhdl)

# Give symbolic names to the set of fonts used in the standard styles.
if PLAT_WIN
	font.base=font:Verdana,size:10
	font.small=font:Verdana,size:8
	font.comment=font:Comic Sans MS,size:9
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=font:Times New Roman,size:11
	font.text.comment=font:Verdana,size:9
	font.embedded.base=font:Verdana,size:9
	font.embedded.comment=font:Comic Sans MS,size:8
	font.monospace=font:Courier New,size:10
	font.vbs=font:Lucida Sans Unicode,size:10
if PLAT_GTK
	font.base=font:!Bitstream Vera Sans,size:9
	font.small=font:!Bitstream Vera Sans,size:8
	font.comment=font:!Bitstream Vera Serif,size:9
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=font:!Bitstream Charter,size:10
	font.text.comment=font:!Serif,size:9
	font.embedded.base=font:!Serif,size:9
	font.embedded.comment=font:!Serif,size:9
	font.monospace=font:!Bitstream Vera Sans Mono,size:9
	font.vbs=font:!Bitstream Vera Sans Mono,size:9
font.js=$(font.comment)

# Old GTK+ font settings are faster but not antialiased
	#~ font.base=font:lucidatypewriter,size:12
	#~ font.small=font:lucidatypewriter,size:10
	#~ font.comment=font:new century schoolbook,size:12
	#~ font.code.comment.box=$(font.comment)
	#~ font.code.comment.line=$(font.comment)
	#~ font.code.comment.doc=$(font.comment)
	#~ font.text=font:times,size:14
	#~ font.text.comment=font:lucidatypewriter,size:10
	#~ font.embedded.base=font:lucidatypewriter,size:12
	#~ font.embedded.comment=font:lucidatypewriter,size:12
	#~ font.monospace=font:courier,size:12
	#~ font.vbs=font:new century schoolbook,size:12

# Give symbolic names to the set of colours used in the standard styles.
colour.code.comment.box=fore:#007F00
colour.code.comment.line=fore:#007F00
colour.code.comment.doc=fore:#3F703F
colour.code.comment.nested=fore:#A0C0A0
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#007F00
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000

colour.number=fore:#007F7F
colour.keyword=fore:#00007F
colour.string=fore:#7F007F
colour.char=fore:#7F007F
colour.operator=fore:#000000
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000

# Global default styles for all languages
# Default
style.*.32=$(font.base)
# Line number
style.*.33=back:#C0C0C0,$(font.base)
# Brace highlight
style.*.34=fore:#0000FF,bold
# Brace incomplete highlight
style.*.35=fore:#FF0000,bold
# Control characters
style.*.36=
# Indentation guides
style.*.37=fore:#C0C0C0,back:#FFFFFF

# Printing - only works on Windows
if PLAT_WIN
	#print.colour.mode=1
	print.magnification=-1
	# Setup: left, right, top, bottom margins, in local units:
	# hundredths of millimeters or thousandths of inches
	print.margins=1500,1000,1000,1500
	# Header/footer:
	# && = &; &p = current page
	# &f = file name; &F = full path
	# &d = file date; &D = current date
	# &t = file time; &T = full time
	print.header.format=$(FileNameExt) Ч Printed on $(CurrentDate), $(CurrentTime) Ч Page $(CurrentPage)
	print.footer.format=$(FilePath) Ч File date: $(FileDate) Ч File time: $(FileTime)
	# Header/footer style
	print.header.style=font:Arial,size:12,bold
	print.footer.style=font:Arial Narrow,size:10,italics

# Warnings - only works on Windows and needs to be pointed at files on machine
#if PLAT_WIN
#	warning.findwrapped=100,E:\Windows\Media\SFX\Boing.wav
#	warning.notfound=0,Effect.wav
#	warning.wrongfile=0,Glass.wav
#	warning.executeok=0,Fanfare.wav
#	warning.executeko=100,GlassBreak.wav
#	warning.nootherbookmark=100,Boing2.wav

# Define the Lexer menu,
# Each item contains three parts: menu string | file extension | key
# The only keys allowed currently are based on F-keys and alphabetic keys and look like
# [Ctrl+][Shift+][Fn|a] such as F12 or Ctrl+Shift+D.
# A '&' may be placed before a letter to be used as an accelerator. This does not work on GTK+.
menu.language=\
#FreeBasic|bas||\
Text|txt|Shift+F11|\
Ada|ads||\
#Apache Confi&g|conf||\
Assembler|asm||\
#ASN.1|asn1||\
#Avenue|ave||\
#Baan|bc||\
&Batch|bat||\
#Bullant|ant||\
&C / C++|c||\
#CMake|cmake||\
C&#|cs||\
#Csound|orc||\
CSS|css||\
D|d||\
&Difference|diff||\
#&Eiffel|e||\
#Erlang|erl||\
&Errorlist|err||\
#FlagShip|prg||\
&Fortran|f90||\
#Gap|g||\
H&ypertext|html|F12|\
#&InnoSetup|iss||\
&Java|java||\
Java&Script|js||\
#&Kix|kix||\
TeX|tex||\
Lisp|lisp||\
#Lot|lot||\
#Lout|lt||\
Lu&a|lua||\
Matlab|m.matlab||\
&Makefile|mak|Ctrl+Shift+F11|\
#MetaPost|mp||\
#MMIXAL|mms||\
#&nnCron crontab|tab||\
#NSIS|nsis||\
#Objective Caml|ml||\
#Octave|m.octave||\
#Opal|impl||\
Pascal|pas||\
Pe&rl|pl||\
P&HP|php||\
#P&LSQL|spec||\
&Properties|properties||\
#P&ostScript|ps||\
#P&OV-Ray SDL|pov||\
Pytho&n|py||\
#Reso&urce|rc||\
Ruby|rb||\
Shell|sh||\
S&QL|sql||\
#Specman|e||\
&TCL|tcl||\
&VB|vb||\
VBScr&ipt|vbs||\
#Verilog|v||\
#VHDL|vhd||\
&XML|xml|Shift+F12|\
YAML|yaml||

# User defined key commands
user.shortcuts=\
Ctrl+Shift+V|IDM_PASTEANDDOWN|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|

#KeypadPlus|IDM_EXPAND|\
#KeypadMinus|IDM_BLOCK_COMMENT|

#user.context.menu=\
#||\
#Next File|IDM_NEXTFILE|\
#Prev File|IDM_PREVFILE|

# import languages\all the language specific properties files
#import languages\ada
#import languages\asm
#import languages\asn1
#import languages\au3
#import languages\ave
#import languages\baan
#import languages\freebasic
#import languages\blitzbasic
#import languages\bullant
#import languages\caml
#import languages\conf
#import languages\cpp
#import languages\cmake
#import languages\d
#import languages\csound
#import languages\css
#import languages\eiffel
#import languages\erlang
#import languages\escript
#import languages\flagship
#import languages\forth
#import languages\fortran
#import languages\gap
#import languages\html
#import languages\inno
#import languages\kix
#import languages\lisp
#import languages\lot
#import languages\lout
import languages\lua
#import languages\matlab
#import languages\metapost
#import languages\mmixal
#import languages\nncrontab
#import languages\nsis
#import languages\opal
#import languages\pascal
#import languages\perl
#import languages\pov
#import languages\ps
#import languages\purebasic
#import languages\python
#import languages\rebol
#import languages\ruby
#import languages\scriptol
#import languages\smalltalk
#import languages\spice
#import languages\sql
#import languages\specman
#import languages\tcl
#import languages\tex
#import languages\vb
#import languages\yaml
#import languages\verilog
#import languages\vhdl
import languages\others

macro.load.on.startup=1


macro.autosave=1


macro.fill.name.dialog=1


macro.recording.numfield.style=$(style.*.33),back: